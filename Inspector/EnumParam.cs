// <auto-generated>
// THIS (.cs) FILE IS GENERATED BY AccessorBuilder. DO NOT CHANGE IT.
// </auto-generated>

using Sirenix.OdinInspector;
using System;
using UnityEngine;

namespace Aplem.Data
{
    [Serializable]
    public class EnumParam<T>
#if UNITY_EDITOR
        : ISerializationCallbackReceiver
#endif
        where T : struct, Enum
    {
        [SerializeField, OnValueChanged("OnEnumChanged", InvokeOnInitialize = false)]
        private T _value;
#if UNITY_EDITOR
        [SerializeField, ReadOnly] private string _labelStr;
#endif


        public static implicit operator T(EnumParam<T> self)
        {
            return self._value;
        }


        // 以下 Editor Only
#if UNITY_EDITOR
        public void OnAfterDeserialize()
        {
            Fix();
        }

        public void OnBeforeSerialize()
        {
            Fix();
        }

        private void Fix()
        {
            if (_value.ToString() != _labelStr)
            {
                try
                {
                    var prev = _value;
                    _value = (T)Enum.Parse<T>(_labelStr);
                    Debug.LogFormat("Fix Label name:{0:s} before:{1:d} after:{2:d}", _labelStr, prev, _value);
                }
                catch (ArgumentException ex)
                {
                    Debug.LogError($"シリアライズされたEnumから以前までのEnum名:{_labelStr}のデータが削除されました。\n応急処置としてdefault={default(T)}を設定します。\n{ex}");
                    _value = default(T);
                }
            }
        }

        private void OnEnumChanged()
        {
            _labelStr = _value.ToString();
        }
#endif
    }
}